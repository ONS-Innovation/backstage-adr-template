apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: add-adr-file
  title: Add ADR File
  description: |
    To ensure consistency, discoverability, and traceability across all projects, Architecture Decision Records (ADRs) must follow the standards below:
    All ADRs should be stored in a dedicated directory within the code repository: /docs/adr/

    This ensures ADRs are version-controlled alongside the codebase and easily accessible to all contributors.
    
    Naming Convention:
    Each ADR file must follow the naming pattern:
    adr-<sequence-number>-<short-title>.md

    Examples:
    adr-001-use-postgresql.md
    adr-002-adopt-terraform.md
    adr-003-deprecate-legacy-auth.md
  tags:
    - adr-file
spec:
  owner: "group:default/spotify-backstage-trial-team"
  type: template
  lifecycle: experimental

  parameters:
    - title: Provide repository info
      required:
        - repoHost
        - repoOrg
        - selectedComponent
      properties:
        repoHost:
          title: Host
          type: string
          default: github.com
          readOnly: true
        repoOrg:
          title: Organization
          type: string
          default: ONS-Innovation
          readOnly: true
        selectedComponent:
          title: Select Component
          type: string
          description: Select a component from the catalog
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: [Component]

    - title: ADR Options
      properties:
        preFill:
          type: boolean
          title: Pre fill ADR fields
          default: false
        sequenceNumber:
          type: string
          title: ADR Sequence Number
          description: 'The sequential number for the ADR (e.g., 001).'
          required: true
        shortTitle:
          type: string
          title: Short Title
          description: 'A short, descriptive title for the ADR filename (e.g., use-new-database).'
          required: true
      dependencies:
        preFill:
          oneOf:
            - properties:
                preFill:
                  const: false
            - required:
                - adrTitle
                - adrStatus
                - adrContext
                - adrDecision
                - adrConsequences
              properties:
                preFill:
                  const: true
                adrTitle:
                  type: string
                  title: ADR Title
                  description: A meaningful title for the decision, without being excessively verbose.
                  default: A meaningful title for the decision.
                adrStatus:
                  type: string
                  title: Status
                  description: What is the status, such as proposed, accepted, rejected, deprecated, superseded, etc.?
                  default: Proposed
                adrContext:
                  type: string
                  title: Context
                  description: What is the issue that we're seeing that is motivating this decision or change?
                  default: Describe the issue...
                adrDecision:
                  type: string
                  title: Decision
                  description: What is the change that we're proposing and/or doing?
                  default: Describe the decision made.
                adrConsequences:
                  type: string
                  title: Consequences
                  description: What becomes easier or more difficult to do because of this change?
                  default: Describe the consequences.
  steps:
    - id: fetch-adr
      name: Fetch ADR Template
      action: fetch:template
      input:
        url: ./template/docs
        values:
          adr_content: |
            # Architecture Decision Record

            ## Title
            ${{ parameters.adrTitle if parameters.preFill else 'A meaningful title for the decision...' }}

            ## Status
            ${{ parameters.adrStatus if parameters.preFill else 'Proposed' }}

            ## Context
            ${{ parameters.adrContext if parameters.preFill else '[Describe the issue...]' }}

            ## Decision
            ${{ parameters.adrDecision if parameters.preFill else '[Describe the decision made.]' }}

            ## Consequences
            ${{ parameters.adrConsequences if parameters.preFill else '[Describe the consequences.]' }}
        targetPath: ./docs/adr

    - id: rename-adr
      name: Rename ADR file
      action: fs:rename
      input:
        files:
          - from: ./docs/adr/adr_template.md
            to: ./docs/adr/adr-${{ parameters.sequenceNumber }}-${{ parameters.shortTitle }}.md

    - id: fetch-entity
      name: Fetch Catalog Entity
      action: catalog:fetch
      input:
        entityRef: ${{ parameters.selectedComponent }}

    - id: pr
      name: Open a PR
      action: publish:github:pull-request
      input:
        update: true
        repoUrl: github.com?repo=${{ steps['fetch-entity'].output.entity.metadata.annotations['github.com/project-slug'].split('/')[1] }}&owner=${{ steps['fetch-entity'].output.entity.metadata.annotations['github.com/project-slug'].split('/')[0] }}
        title: "Backstage: Add ADR file"
        branchName: "add-adr-file"
        description: |
          This PR adds a docs/adr.md file as part of architectural documentation.
        targetPath: "."
        commitMessage: "Backstage: Add ADR file"
        assignees:
          - ${{ user.entity.metadata.annotations['github.com/user-login'] }}

  output:
    text:
      - title: "Success!"
        content: |
          Pull request created to add the ADR file to the repository.
    links:
      - title: Open in GitHub
        url: ${{ steps.pr.output.remoteUrl }}

